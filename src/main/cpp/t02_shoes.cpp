//В обувном магазине продается обувь разного размера. 
// Известно, что одну пару обуви можно надеть на другую, 
// если она хотя бы на три размера больше. 
// В магазин пришел покупатель. 
// Требуется определить, какое наибольшее количество пар обуви сможет предложить ему продавец так,
// чтобы он смог надеть их все одновременно.
//
//Входные данные
//
//Сначала вводится размер ноги покупателя 
// (обувь меньшего размера он надеть не сможет),
// затем количество пар обуви в магазине и размер каждой пары.
// Размер — натуральное число, не превосходящее 100, 
// количество пар обуви в магазине не превосходит 1000.
//
//Выходные данные
//
//Выведите единственное число — максимальное количество пар обуви.
//
//Sample Input:
//
//26
//5
//30 35 40 41 42
//Sample Output:
//
//3

#include "t02_shoes.h"
#include <iostream>
#include <vector>
#include <algorithm>



using namespace std;

int t02_shoes() {
    int n, s1, s2, count = 0;
    bool on = false;
       std::cin >> s1;
    std::cin >>n;
   std::vector<int> v(n);
    while (n > 0){
        n--;
        std::cin >> s2;
        v[n] = s2;
    }
    std::sort(v.begin(), v.end());
    for (int i : v){
        if (!on){
            if ( i >= s1){
            count++;
                s1 = i;
                on = true;
            }
        }
        if (s1 <= i - 3){
            count++;
            s1 = i;
        }
    }
    std::cout << count;
  return 0;
}    
