//В обувном магазине продается обувь разного размера. 
// Известно, что одну пару обуви можно надеть на другую, 
// если она хотя бы на три размера больше. 
// В магазин пришел покупатель. 
// Требуется определить, какое наибольшее количество пар обуви сможет предложить ему продавец так,
// чтобы он смог надеть их все одновременно.
//
//Входные данные
//
//Сначала вводится размер ноги покупателя 
// (обувь меньшего размера он надеть не сможет),
// затем количество пар обуви в магазине и размер каждой пары.
// Размер — натуральное число, не превосходящее 100, 
// количество пар обуви в магазине не превосходит 1000.
//
//Выходные данные
//
//Выведите единственное число — максимальное количество пар обуви.
//
//Sample Input:
//
//26
//5
//30 35 40 41 42
//Sample Output:
//
//3

#include "t02_shoes.h"
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int t02_shoes() {
            int n,m;
            vector <int> shoes_size;
            cin>>m>>n;
            shoes_size.resize(n + 1,0);
            for(int i = 0;i < n;++i){
                cin>>shoes_size[i];
            }
            int ans = 0;
            for(int i = 0;i < n;++i){
                if(shoes_size[i] >= m){
                    int tmp = shoes_size[i];
                    int cnt = 1;
                    for(int j = i + 1;j < n;++j){
                        if(shoes_size[j] - tmp >= 3){
                            tmp = shoes_size[j];
                            ++cnt;
                        }
                    }
                    ans = max(ans,cnt);
                }
            }
            cout<<ans;
}
