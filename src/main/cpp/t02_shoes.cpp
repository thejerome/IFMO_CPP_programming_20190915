//В обувном магазине продается обувь разного размера. 
// Известно, что одну пару обуви можно надеть на другую, 
// если она хотя бы на три размера больше. 
// В магазин пришел покупатель. 
// Требуется определить, какое наибольшее количество пар обуви сможет предложить ему продавец так,
// чтобы он смог надеть их все одновременно.
//
//Входные данные
//
//Сначала вводится размер ноги покупателя 
// (обувь меньшего размера он надеть не сможет),
// затем количество пар обуви в магазине и размер каждой пары.
// Размер — натуральное число, не превосходящее 100, 
// количество пар обуви в магазине не превосходит 1000.
//
//Выходные данные
//
//Выведите единственное число — максимальное количество пар обуви.
//
//Sample Input:
//
//26
//5
//30 35 40 41 42
//Sample Output:
//
//3

#include "t02_shoes.h"
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int t02_shoes() {
    vector <int> shoes;
    int n, foot, count = 0;
    bool is_fit = true;
    cin >> foot >> n;
    for(int i = 0; i < n; i++){
        int t;
        cin >> t;
        shoes.push_back(t);
    }

    sort(shoes.begin(), shoes.end());

    for(int i = 0; i < n; i++){
        if(is_fit && shoes[i] >= foot){
            is_fit = false;
            foot = shoes[i];
            count++;
        }
        if(shoes[i] - foot >= 3){
            foot = shoes[i];
            count++;
        }
    }

    cout << count;
    return 0;
}
